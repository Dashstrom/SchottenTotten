name: CMake Builds

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  BUILD_TYPE: Release

jobs:

  # macOS Universal

  macos-prepare:
    runs-on: [self-hosted, macOS, ARM64]

    steps:
      - name: Clean workspace
        run: rm -rf ${{runner.workspace}}/build

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: "6.4.3"

      - uses: actions/checkout@v3


  macos-build-arm64:
    needs: macos-prepare
    runs-on: [self-hosted, macOS, ARM64]
    env:
      homebrew_prefix: /opt/homebrew

    steps:
      - name: Create build directory
        run: mkdir -p ${{runner.workspace}}/build/arm64

      - name: Configure
        working-directory: ${{runner.workspace}}/build/arm64
        run: arch -arm64 ${{env.homebrew_prefix}}/bin/cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DPKG_CONFIG_EXECUTABLE=${{env.homebrew_prefix}}/bin/pkg-config -DMACOS_BUNDLE_LIBS=ON -DUSE_QT6=ON

      - name: Make
        working-directory: ${{runner.workspace}}/build/arm64
        run: arch -arm64 make -j$(sysctl -n hw.logicalcpu)

  macos-build-x86_64:
    needs: macos-prepare
    runs-on: [self-hosted, macOS, ARM64]
    env:
      homebrew_prefix: /usr/local

    steps:
      - name: Create build directory
        run: mkdir -p ${{runner.workspace}}/build/x86_64

      - name: Configure
        working-directory: ${{runner.workspace}}/build/x86_64
        run: arch -x86_64 ${{env.homebrew_prefix}}/bin/cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}Release -DPKG_CONFIG_EXECUTABLE=${{env.homebrew_prefix}}/bin/pkg-config -DMACOS_BUNDLE_LIBS=ON -DUSE_QT6=ON

      - name: Make
        working-directory: ${{runner.workspace}}/build/x86_64
        run: arch -x86_64 make -j$(sysctl -n hw.logicalcpu)

  macos-universal-binary:
    needs: [macos-build-arm64, macos-build-x86_64]
    runs-on: [self-hosted, macOS, ARM64]

    steps:
      - name: Merge binaries
        run: $GITHUB_WORKSPACE/tools/mac-universal.py ${{runner.workspace}}/build/arm64/SchottenTotten.app ${{runner.workspace}}/build/x86_64/SchottenTotten.app ${{runner.workspace}}/build/universal/SchottenTotten.app

      - name: Create DMG
        run: hdiutil create -fs HFS+ -volname SchottenTotten -srcfolder ${{runner.workspace}}/build/universal/SchottenTotten.app -ov -format UDBZ ${{runner.workspace}}/build/universal/SchottenTotten.dmg

      - uses: actions/upload-artifact@v3
        with:
          name: SchottenTotten_mac_UB2
          path: ${{runner.workspace}}/build/universal/SchottenTotten.dmg

  # Ubuntu x86-64

  ubuntu-build-x86-64:

    runs-on: ubuntu-20.04

    steps:

    - uses: actions/checkout@v3

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: "6.4.3"

    - name: Configure
      working-directory: ${{github.workspace}}
      run: cmake -B $RUNNER_WORKSPACE/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} .

    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config ${{env.BUILD_TYPE}}

    - uses: actions/upload-artifact@v3
      with:
        name: SchottenTotten_linux_x86_64
        path: ${{runner.workspace}}/build/SchottenTotten

  # Windows x86-64

  windows-build:

    runs-on: windows-latest

    steps:

    - uses: actions/checkout@v3

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: "6.4.3"

    - name: Configure
      working-directory: ${{github.workspace}}
      run: cmake -B "$env:RUNNER_WORKSPACE/build" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} .

    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config ${{env.BUILD_TYPE}}

    - uses: actions/upload-artifact@v3
      with:
        name: SchottenTotten_win_x86_64
        path: ${{runner.workspace}}\build\SchottenTotten.exe

  publish-release:

    needs:
      - macos-universal-binary
      - ubuntu-build-x86-64
      - windows-build
    name: Publish Release
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/download-artifact@v3
      name: Download builded executables
      with:
        path: artifacts
    - name: Zip executables
      run: |
        RELEASE_VERSION="${GITHUB_REF#refs/tags/v}"
        cp "SchottenTotten_${RELEASE_VERSION}_macos_UB2/.dmg" artifacts/SchottenTotten_mac_UB2/SchottenTotten.dmg
        zip "SchottenTotten_${RELEASE_VERSION}_win_x86_64" artifacts/SchottenTotten_win_x86_64/SchottenTotten.exe
        zip "SchottenTotten_${RELEASE_VERSION}_linux_x86_64" artifacts/SchottenTotten_linux_x86_64/SchottenTotten
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: artifacts
